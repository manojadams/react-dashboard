{"version":3,"file":"static/js/221.b8ad9a61.chunk.js","mappings":"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","sources":["../node_modules/@mui/private-theming/ThemeProvider/nested.js","../node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","../node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/easing/utils/map.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/utils/wildcards.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return _extends({}, outerTheme, localTheme);\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/private-theming';\nimport { exactProp } from '@mui/utils';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useTheme from '../useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction InnerThemeProvider(props) {\n  const theme = useTheme();\n  return /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n    value: typeof theme === 'object' ? theme : EMPTY_THEME,\n    children: props.children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? InnerThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node\n} : void 0;\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: localTheme,\n    children: /*#__PURE__*/_jsx(InnerThemeProvider, {\n      children: children\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        resolveFinishedPromise && resolveFinishedPromise();\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = (timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay;\n        const isInDelayPhase = timeWithoutDelay < 0;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" ||\n                (playState === \"running\" && done) ||\n                (speed < 0 && currentTime <= 0));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { cancelSync, sync } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        sync.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelSync.update(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\nimport { fillWildcardKeyframes } from './wildcards.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        return fillWildcardKeyframes(origin, target);\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","function fillWildcardKeyframes(origin, [...keyframes]) {\n    /**\n     * Ensure an wildcard keyframes are hydrated by the origin.\n     */\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? origin : keyframes[i - 1];\n        }\n    }\n    return keyframes;\n}\n\nexport { fillWildcardKeyframes };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.11.6\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.11.6\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.11.6 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["Symbol","for","props","children","localTheme","theme","outerTheme","useTheme","React","output","_extends","mergeOuterLocalTheme","nested","_jsx","ThemeContext","value","EMPTY_THEME","InnerThemeProvider","StyledEngineThemeContext","MuiThemeProvider","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","key","isEnabled","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","custom","arguments","length","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","i","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_objectWithoutProperties","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","this","isMounted","_createClass","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","push","cancel","index","splice","delete","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","requestAnimationFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","apply","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","_slicedToArray","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_defineProperty","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","_toConsumableArray","numbers","tokenised","createTransformer","_analyseComplexValue","numValues","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","speed","hasStopped","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","acceleratedValues","createAcceleratedAnimation","valueName","_options$duration","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","getZeroUnit","potentialUnitType","getValueTransition","getKeyframes","isTargetAnimatable","_toArray","fillWildcardKeyframes","animateMotionValue","valueTransition","_transition$elapsed","originKeyframe","targetKeyframe","isOriginAnimatable","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","read","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getComputedStyle","getPropertyValue","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","_objectDestructuringEmpty","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","object","getPrototypeOf","desc","getOwnPropertyDescriptor","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}