{"version":3,"file":"static/js/176.7da10268.chunk.js","mappings":"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","sources":["components/common/styled.js","config/themes/dashboard.theme.js","config/themes/page.theme.js","components/Login/Login.js","common/api-constants.js","services/Gateway.js","components/Login/index.js","components/Login/Login.container.js","pages/LoginPage.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const WrapperSM = styled.div`\n    background: #e6e6ea;\n    padding: 24px;\n    width: 360px;\n    border-radius: 8px;\n    form {\n        display: flex;\n        flex-direction: column;\n        gap: 32px;\n    }\n`;","import { createTheme } from \"@mui/material\";\nimport { ColorsStyles } from \"./page.theme\";\n\nconst DASHBOARD_THEME = createTheme({\n    palette: {\n        primary: {\n            main: \"#673ab7\"\n        }\n    },\n    typography: {\n        fontFamily: \"Poppins-Regular\"\n    },\n    components: {\n        MuiTextField: {\n            styleOverrides: {\n                root: ColorsStyles\n            }\n        },\n        MuiFormControl: {\n            styleOverrides: {\n                root: ColorsStyles\n            }\n        }\n    }\n});\n\nexport const TABLE_THEME = DASHBOARD_THEME;\n\nexport default DASHBOARD_THEME;\n","import { createTheme } from \"@mui/material\";\n\nexport const ColorsStyles = {\n    \".MuiOutlinedInput-root\": {\n        \"&:hover\": {\n            \".MuiOutlinedInput-notchedOutline\": {\n                borderColor: \"var(--primary-color)\"\n            }\n        },\n        \"&.Mui-error\": {\n            \"&:hover\": {\n                \".MuiOutlinedInput-notchedOutline\": {\n                    borderColor: \"#d32f2f\"\n                }\n            }\n        },\n        \"&.Mui-focused\": {\n            \".MuiOutlinedInput-notchedOutline\": {\n                borderColor: \"var(--primary-color)\"\n            }\n        }\n    },\n    \".MuiFormLabel-root\": {\n        \"&.Mui-focused\": {\n            color: \"var(--primary-color)\"\n        },\n        \"&.Mui-error\": {\n            color: \"#d32f2f\"\n        }\n    }\n};\n\nconst PAGE_THEME = createTheme({\n    palette: {\n        primary: {\n            main: \"#58355E\"\n        }\n    },\n    typography: {\n        fontFamily: \"Comfortaa\"\n    },\n    components: {\n        MuiTextField: {\n            styleOverrides: {\n                root: ColorsStyles\n            }\n        },\n        MuiFormControl: {\n            styleOverrides: {\n                root: ColorsStyles\n            }\n        }\n    }\n});\n\nexport default PAGE_THEME;","import { ThemeProvider } from \"@emotion/react\";\nimport { WrapperSM } from \"../common/styled\";\nimport { PAGE_THEME } from \"../../config/themes\";\nimport { Button, TextField } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\n\nconst Login = (props) => {\n    return (\n        <WrapperSM>\n            <ThemeProvider theme={PAGE_THEME}>\n                <form onSubmit={(e) => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    const email = e.currentTarget.elements[\"email\"];\n                    const password = e.currentTarget.elements[\"password\"];\n                    props.onLogin(email.value, password.value);\n                    return false;\n                }}>\n                    <h2 className=\"text-center\">Login</h2>\n                    <TextField\n                        label=\"Email\" \n                        size=\"small\" \n                        type=\"email\"\n                        name=\"email\"\n                        required\n                        />\n                    <TextField label=\"Password\" size=\"small\" type=\"password\"\n                        name=\"password\"\n                        required\n                    />\n                    <Button type=\"submit\" variant=\"contained\" \n                        >Login</Button>\n                    <Button variant=\"text\">\n                        <Link to=\"/register\">\n                            New user? Register here\n                        </Link>\n                    </Button>\n                </form>\n            </ThemeProvider>\n        </WrapperSM>\n    );\n}\n\nexport default Login;\n","// \nconst REST_CONSTANTS = {\n\n};\n\nexport default REST_CONSTANTS;\n","import axios from \"axios\";\nimport REST_CONSTANTS from \"./../common/api-constants\";\nimport { USER_INFO } from \"../common/constants\";\n\nclass Gateway {\n\n    static getConfig() {\n        const USER_KEY = \"demo\";\n        const config = {\n            headers: {\n                \"user-key\": USER_KEY\n            }\n        }\n        return config;\n    }\n\n    static setUserDetails(email, apiKey) {\n        sessionStorage.setItem(USER_INFO.EMAIL, email);\n        this.setUserApiKey(apiKey);\n    }\n\n    static getUserToken() {\n        return sessionStorage.getItem(USER_INFO.TOKEN);\n    }\n\n    static setUserToken(value) {\n        sessionStorage.setItem(USER_INFO.TOKEN, value);\n    }\n    \n    static clearLogin() {\n        sessionStorage.removeItem(USER_INFO.EMAIL);\n        sessionStorage.removeItem(USER_INFO.TOKEN);\n    }\n\n\n    static getClients() {\n        return axios.get(REST_CONSTANTS.GET_CLIENTS, this.getConfig());\n    }\n\n    static getUserClients(email) {\n    }\n\n    static updateClient(client) {\n        return axios.patch(REST_CONSTANTS.UPDATE_CLIENT, client, this.getConfig());\n    }\n\n    static getApps() {\n        return axios.get(REST_CONSTANTS.GET_APPS, this.getConfig());\n    }\n\n    static getUserApps(email) {\n    }\n\n    static updateApp(app) {\n        return axios.patch(REST_CONSTANTS.UPDATE_APP, app, this.getConfig());\n    }\n\n    static getUsers() {\n        return axios.get(REST_CONSTANTS.GET_USERS, this.getConfig());\n    }\n\n    static updateUserProfile(user) {\n        return axios.patch(REST_CONSTANTS.UPDATE_USER, user, this.getConfig());\n    }\n\n    static updateUser(user) {\n        return axios.patch(REST_CONSTANTS.UPDATE_USER, user, this.getConfig());\n    }\n\n    static register(payload) {\n        return axios.post(REST_CONSTANTS.PROXY_REGISTER, payload, this.getConfig());\n    }\n\n    static getSupportRequest() {\n        return axios.get(REST_CONSTANTS.GET_SUPPORT_REQUESTS, this.getConfig());\n    }\n\n    static createSupportRequest(payload) {\n        return axios.post(REST_CONSTANTS.CREATE_SUPPORT_REQUESTS, payload, this.getConfig());\n    }\n\n    static getUserSupportRequest(email) {\n    }\n\n    static updateSupportRequest(request) {\n        return axios.patch(REST_CONSTANTS.UPDATE_SUPPORT_REQUEST, request, this.getConfig());\n    }\n\n    static getSupportResponse() {\n        return axios.get(REST_CONSTANTS.GET_SUPPORT_RESPONSE, this.getConfig());\n    }\n\n    static getUserSupportResponse(email) {\n    }\n\n    static getLicenses() {\n        return axios.get(REST_CONSTANTS.GET_LICENSES, this.getConfig());\n    }\n\n    static getUserLicenses(email) {\n    }\n\n    static updateLicense(license) {\n        return axios.patch(REST_CONSTANTS.UPDATE_LICENSE, license, this.getConfig());\n    }\n\n    /**\n     * \n     * @param {*} email \n     * @returns \n     */\n    static getUserInfo() {\n        return Promise.resolve({\n            username: \"demo\",\n            password: \"demo\"\n        });\n    }\n\n    static getUserStats() {\n    }\n\n    static login(username, pass) {\n        sessionStorage.setItem(\"username\", username);\n    }\n\n    static contactSupport(body, recaptcha_token) {\n    }\n}\n\nexport default Gateway;\n","import LoginContainer from \"./Login.container\";\n\nexport default LoginContainer;\n","import { useNavigate } from \"react-router-dom\";\nimport Login from \"./Login\";\nimport { PAGE_ROUTES } from \"../../common/constants\";\nimport Gateway from \"../../services/Gateway\";\nimport { useState } from \"react\";\nimport { toast } from \"react-hot-toast\";\n\nconst LoginContainer = () => {\n    const navigate = useNavigate();\n    return (\n        <Login onLogin={(email, password) => {\n            if (email === \"demo@demo\" && password === \"demo\") {\n                Gateway.login(email, password);\n                navigate(\"/\" + PAGE_ROUTES.DASHBOARD);\n            } else {\n                toast.error(\"Username or password is not correct\");\n            }\n        }} />\n    );\n}\n\nexport default LoginContainer;\n","import Login from \"../components/Login\";\nimport { Wrapper } from \"../components/common/styled\";\n\nconst LoginPage = (props) => {\n    return (\n        <Wrapper>\n            <Login />\n        </Wrapper>\n    );\n}\n\nexport default LoginPage;\n"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","WrapperSM","_templateObject2","DASHBOARD_THEME","createTheme","palette","primary","main","typography","fontFamily","components","MuiTextField","styleOverrides","root","ColorsStyles","MuiFormControl","borderColor","color","PAGE_THEME","props","_jsx","children","ThemeProvider","theme","_jsxs","onSubmit","e","preventDefault","stopPropagation","email","currentTarget","elements","password","onLogin","value","className","TextField","label","size","type","name","required","Button","variant","Link","to","Gateway","_classCallCheck","_createClass","key","headers","apiKey","sessionStorage","setItem","USER_INFO","this","setUserApiKey","getItem","removeItem","axios","REST_CONSTANTS","getConfig","client","app","user","payload","request","license","Promise","resolve","username","pass","body","recaptcha_token","navigate","useNavigate","Login","PAGE_ROUTES","toast"],"sourceRoot":""}